From 74679d7b310d0b7003ac5e550796942be7051300 Mon Sep 17 00:00:00 2001
From: Viktor Hofer <viktor.hofer@microsoft.com>
Date: Thu, 31 Oct 2024 12:03:26 +0100
Subject: [PATCH] Avoid a LINQ usage in tensor extensions and update linker tfm

Backports:
- https://github.com/dotnet/runtime/pull/109405
- https://github.com/dotnet/runtime/commit/026f615bdecc40a6627fdbbdd6d578d35a8da1e7
---
 .../Numerics/Tensors/netcore/TensorExtensions.cs       | 10 ++++++++--
 src/tools/illink/src/ILLink.Tasks/LinkTask.cs          |  5 ++++-
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/src/libraries/System.Numerics.Tensors/src/System/Numerics/Tensors/netcore/TensorExtensions.cs b/src/libraries/System.Numerics.Tensors/src/System/Numerics/Tensors/netcore/TensorExtensions.cs
index 42f6a4319b2..5bddcb2ffc9 100644
--- a/src/libraries/System.Numerics.Tensors/src/System/Numerics/Tensors/netcore/TensorExtensions.cs
+++ b/src/libraries/System.Numerics.Tensors/src/System/Numerics/Tensors/netcore/TensorExtensions.cs
@@ -2658,8 +2658,14 @@ public static Tensor<T> PermuteDimensions<T>(this Tensor<T> tensor, params ReadO
 
                 if (dimensions.IsEmpty)
                 {
-                    lengths = tensor._lengths.Reverse().ToArray();
-                    permutation = Enumerable.Range(0, tensor.Rank).Reverse().ToArray();
+                    int[] tempPermutation = new int[tensor.Rank];
+                    for (int i = 0; i < tensor.Rank; i++)
+                    {
+                        lengths[i] = tensor._lengths[tensor.Rank - 1 - i];
+                        tempPermutation[i] = tensor.Rank - 1 - i;
+                    }
+
+                    permutation = tempPermutation;
                 }
                 else
                 {
diff --git a/src/tools/illink/src/ILLink.Tasks/LinkTask.cs b/src/tools/illink/src/ILLink.Tasks/LinkTask.cs
index ce24b35de9e..996c8131a91 100644
--- a/src/tools/illink/src/ILLink.Tasks/LinkTask.cs
+++ b/src/tools/illink/src/ILLink.Tasks/LinkTask.cs
@@ -269,7 +269,10 @@ public string ILLinkPath {
 				var taskDirectory = Path.GetDirectoryName (Assembly.GetExecutingAssembly ().Location);
 #pragma warning restore IL3000 // Avoid accessing Assembly file path when publishing as a single file
 				// IL Linker always runs on .NET Core, even when using desktop MSBuild to host ILLink.Tasks.
-				_illinkPath = Path.Combine (Path.GetDirectoryName (taskDirectory), "net9.0", "illink.dll");
+
+				// TODO: Avoid the hardcoded TFM value: https://github.com/dotnet/runtime/issues/109335
+				_illinkPath = Path.Combine (Path.GetDirectoryName (taskDirectory), "net10.0", "illink.dll");
+
 				return _illinkPath;
 			}
 			set => _illinkPath = value;
